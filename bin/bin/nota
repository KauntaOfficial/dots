#!/usr/bin/env bash
#
# Nota: Note Management

set -e

YEAR=10

classes=()
years=()
notes=()

usage() {
cat << EOF


USAGE:
        
    nota [year|"all"] (class)
    
EXAMPLES:
    
    nota 
        - Compiles notes for this year and all classes

    nota all
        - Compiles all notes

    nota 10
        - Compiles notes for 10th year

    nota 1 APComputerScience
        - Compiles notes for Year 1, AP Comp. Sci


EOF
}

getclassnames() {
    for file in $HOME/Notes/"Year$1"/*; do
        if [[ -d $file ]]; then
            classes+=("$file")
        fi
    done
}

getyearnames() {
    for file in $HOME/Notes/*; do
        if [[ -d $file ]]; then
            years+=("$file")
        fi
    done
}

getnotes() {
    for file in $1; do
        notes+=("$PWD/$file")
    done   
}

makepdf() {
    pandoc --pdf-engine=lualatex -H "$HOME/Notes/fonts.tex" --toc \
        -o "$1.pdf" -f gfm "$HOME/Notes/about.md" "$2"
    echo "Created $1.pdf"
}

makenotes() {
    for year in $HOME/Notes/Year$1; do
        for class in $year/Class$2; do
            cd "$class"
            getnotes "$class"
            output_file="$class/"$(basename "$class")           
            
            makepdf "$output_file" "$notes"

            unset notes output_file

            cd - &>/dev/null
        done

        cd "$year"
        echo "Compiling Year $year's PDF"
        
        gs -sDEVICE=pdfwrite \
            -dQUIET \
            -o "$(basename $year).pdf" \
            Class*/*.pdf &&
        echo "Created ${year}.pdf"
    done
}

main() {
    case "$1" in
        "all")
            echo "[Notes] Compiling All Notes"
            makenotes "*" "*"
            echo "[Notes] Finished Compiling All Notes"
            exit 0
            ;;
        '')
            echo "[Notes] Compiling Year ${YEAR} Notes"
            makenotes "${YEAR}" "*"
            echo "[Notes] Finished Compiling Year ${YEAR}"
            exit 0
            ;;
        [0-9]*)
            if [[ "$2" == '' ]]; then
                echo "[Notes] Compiling Year $1 Notes"
                makenotes "$1" "*"
                echo "[Notes] Finished Compiling Year $1"
            else
                getclassnames "$1"
                found=false
                for class in "${arr[@]}"; do
                    if [[ "$class" == "$2" ]]; then
                        found=true
                        break
                    fi
                done
                if [[ "$found" = false ]]; then
                    echo "[Notes] Invalid Class Name For Year $1"
                    exit 1
                fi
                makenotes "$1" "$2"
                echo "[Notes] Finished Compiling Year $1 - $2"
                exit 0
            fi
            ;;
        *)
            usage
            exit 1
            ;;
    esac
}

main "$1" "$2"
